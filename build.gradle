buildscript {
    ext {
        springBootVersion = '3.0.5'
        springCloudVersion = '2022.0.2'
        springCloudAlibabaVersion = '2022.0.0.0'
    }

    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply from: 'version.gradle'

description 'Debug project for Spring Boot'

group = 'com.fishep'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_18
    targetCompatibility = JavaVersion.VERSION_18
}

compileJava.options.encoding "UTF-8"
compileTestJava.options.encoding "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
}

dependencyManagement {
    dependencies {
        for (depJar in rootProject.ext.dependencies) {
            dependency depJar.value
        }
    }
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
    }
}

dependencies {
    implementation 'org.projectlombok:lombok'
    implementation 'cn.hutool:hutool-all'
    implementation 'org.mapstruct:mapstruct'
    implementation 'io.projectreactor:reactor-core'

//    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
//    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-webflux'
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

//    api "org.springframework.cloud:spring-cloud-starter-bootstrap"
//    api 'com.alibaba.nacos:nacos-client:2.2.3'
//    api('com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config') {
//        exclude group: 'com.alibaba.nacos:nacos-client'
//    }
//    api('com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery') {
//        exclude group: 'com.alibaba.nacos:nacos-client'
//    }
//    api 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor'
}

def profile = System.getProperty("profile") ?: "dev"
processResources {
    filesMatching('bootstrap.yml') {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [profile: profile]
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
